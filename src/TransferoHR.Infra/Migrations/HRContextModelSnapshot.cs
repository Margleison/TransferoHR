// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransferoHR.Infra.Database;

#nullable disable

namespace TransferoHR.Infra.Migrations
{
    [DbContext(typeof(HRContext))]
    partial class HRContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TransferoHR.Domain.Entities.Collaborator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BankBranch")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("EmergencyContact")
                        .HasColumnType("longtext");

                    b.Property<string>("ForeignIdentificationDocument")
                        .HasColumnType("longtext");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Nationality")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pixkey")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkEmail")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Collaborator");
                });

            modelBuilder.Entity("TransferoHR.Domain.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1c04ede8-cdca-429c-88e9-fae3cb2031e6"),
                            CNPJ = "30.934.964/0001-78",
                            CreatedAt = new DateTime(2024, 11, 19, 14, 59, 7, 410, DateTimeKind.Local).AddTicks(5277),
                            CreatedBy = "system",
                            Name = "TRANSF. GESTÃO DE ATIVOS DIGITAIS - EIRELI",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("8eaa146b-8a49-4909-85de-617bb007be71"),
                            CNPJ = "28.360.810/0001-78",
                            CreatedAt = new DateTime(2024, 11, 19, 14, 59, 7, 410, DateTimeKind.Local).AddTicks(5278),
                            CreatedBy = "system",
                            Name = "TRANSFERO SWISS LTD",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("ecaa5cf1-4091-45d6-ae64-a7aa5be3e66c"),
                            CNPJ = "42.155.153/0001-58",
                            CreatedAt = new DateTime(2024, 11, 19, 14, 59, 7, 410, DateTimeKind.Local).AddTicks(5282),
                            CreatedBy = "system",
                            Name = "TRANSFERO GESTORA DE RECURSOS LTDA",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("3eecb69a-ee20-4e80-b259-208a95fed670"),
                            CNPJ = "45.685.859/0001-10",
                            CreatedAt = new DateTime(2024, 11, 19, 14, 59, 7, 410, DateTimeKind.Local).AddTicks(5283),
                            CreatedBy = "system",
                            Name = "TRANSFERO PAGAMENTOS HOLDING",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("TransferoHR.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cb072957-8cfb-4fcb-af0a-4231bc8aa9db"),
                            CreatedAt = new DateTime(2024, 11, 19, 14, 59, 7, 410, DateTimeKind.Local).AddTicks(5298),
                            CreatedBy = "system",
                            Name = "Infraestrutura",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("8abf7bf7-c24b-4201-b5f8-a65b07dd5b5b"),
                            CreatedAt = new DateTime(2024, 11, 19, 14, 59, 7, 410, DateTimeKind.Local).AddTicks(5300),
                            CreatedBy = "system",
                            Name = "Asset",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("TransferoHR.Domain.Entities.JobLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("JobLevel");

                    b.HasData(
                        new
                        {
                            Id = new Guid("73f8d319-8c24-45ac-b5be-d564ebdc5bbe"),
                            CreatedAt = new DateTime(2024, 11, 19, 14, 59, 7, 410, DateTimeKind.Local).AddTicks(5109),
                            CreatedBy = "system",
                            Name = "Junior",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("9724945d-4aa8-48f5-9dba-55f3d5472ca0"),
                            CreatedAt = new DateTime(2024, 11, 19, 14, 59, 7, 410, DateTimeKind.Local).AddTicks(5123),
                            CreatedBy = "system",
                            Name = "Senior",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("3bce7356-75f3-4219-97fe-9dc9b9f43df0"),
                            CreatedAt = new DateTime(2024, 11, 19, 14, 59, 7, 410, DateTimeKind.Local).AddTicks(5135),
                            CreatedBy = "system",
                            Name = "Pleno",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("3341c55f-241a-4b1e-ae62-480478eb17d0"),
                            CreatedAt = new DateTime(2024, 11, 19, 14, 59, 7, 410, DateTimeKind.Local).AddTicks(5136),
                            CreatedBy = "system",
                            Name = "Gerente",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("TransferoHR.Domain.Entities.JobTitle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("JobTitle");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a7859c25-1d92-44fd-88c0-0abb5c735a47"),
                            CreatedAt = new DateTime(2024, 11, 19, 14, 59, 7, 410, DateTimeKind.Local).AddTicks(5254),
                            CreatedBy = "system",
                            Name = "DBA",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("b62abc4e-6f29-48ab-9471-5d30cd3ceb03"),
                            CreatedAt = new DateTime(2024, 11, 19, 14, 59, 7, 410, DateTimeKind.Local).AddTicks(5256),
                            CreatedBy = "system",
                            Name = "Analista de suporte",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("a1d6fdd8-04b2-408e-be7a-8859a6936c68"),
                            CreatedAt = new DateTime(2024, 11, 19, 14, 59, 7, 410, DateTimeKind.Local).AddTicks(5258),
                            CreatedBy = "system",
                            Name = "Desenvolvedor",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("892a50d6-d3c7-4e2c-a5e0-d648f64e1b35"),
                            CreatedAt = new DateTime(2024, 11, 19, 14, 59, 7, 410, DateTimeKind.Local).AddTicks(5259),
                            CreatedBy = "system",
                            Name = "Analista de Asset",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("TransferoHR.Domain.Entities.WorkExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CollaboratorId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<Guid>("JobLevelId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("JobTitleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("LeaderId")
                        .HasColumnType("char(36)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CollaboratorId");

                    b.HasIndex("JobLevelId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("LeaderId");

                    b.ToTable("WorkExperience");
                });

            modelBuilder.Entity("TransferoHR.Domain.Entities.WorkExperience", b =>
                {
                    b.HasOne("TransferoHR.Domain.Entities.Collaborator", "Collaborator")
                        .WithMany()
                        .HasForeignKey("CollaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransferoHR.Domain.Entities.JobLevel", "JobLevel")
                        .WithMany()
                        .HasForeignKey("JobLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransferoHR.Domain.Entities.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransferoHR.Domain.Entities.Collaborator", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collaborator");

                    b.Navigation("JobLevel");

                    b.Navigation("JobTitle");

                    b.Navigation("Leader");
                });
#pragma warning restore 612, 618
        }
    }
}

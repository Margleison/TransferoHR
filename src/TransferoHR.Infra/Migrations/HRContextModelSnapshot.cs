// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TransferoHR.Infra.Database;

#nullable disable

namespace TransferoHR.Infra.Migrations
{
    [DbContext(typeof(HRContext))]
    partial class HRContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("TransferoHR.Domain.Entities.Collaborator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("BankAccount")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BankBranch")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("EmergencyContact")
                        .HasColumnType("longtext");

                    b.Property<string>("ForeignIdentificationDocument")
                        .HasColumnType("longtext");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Nationality")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pixkey")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("WorkEmail")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.HasKey("Id");

                    b.ToTable("Collaborator");
                });

            modelBuilder.Entity("TransferoHR.Domain.Entities.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4f59d6c8-876b-4ef4-ab4f-2ff3caf647cb"),
                            CNPJ = "30.934.964/0001-78",
                            CreatedAt = new DateTime(2024, 11, 14, 18, 17, 10, 767, DateTimeKind.Local).AddTicks(2903),
                            CreatedBy = "system",
                            Name = "TRANSF. GESTÃO DE ATIVOS DIGITAIS - EIRELI",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("f075086b-ba64-44d3-bd64-d35ca4c13daf"),
                            CNPJ = "28.360.810/0001-78",
                            CreatedAt = new DateTime(2024, 11, 14, 18, 17, 10, 767, DateTimeKind.Local).AddTicks(2905),
                            CreatedBy = "system",
                            Name = "TRANSFERO SWISS LTD",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("0d30210b-c779-4115-a7bf-d9691ba1c3ab"),
                            CNPJ = "42.155.153/0001-58",
                            CreatedAt = new DateTime(2024, 11, 14, 18, 17, 10, 767, DateTimeKind.Local).AddTicks(2906),
                            CreatedBy = "system",
                            Name = "TRANSFERO GESTORA DE RECURSOS LTDA",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("da02253f-597d-419b-a9fc-e00f362cd8b8"),
                            CNPJ = "45.685.859/0001-10",
                            CreatedAt = new DateTime(2024, 11, 14, 18, 17, 10, 767, DateTimeKind.Local).AddTicks(2908),
                            CreatedBy = "system",
                            Name = "TRANSFERO PAGAMENTOS HOLDING",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("TransferoHR.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3040fe92-4ea9-432e-8895-4c9e590daf2e"),
                            CreatedAt = new DateTime(2024, 11, 14, 18, 17, 10, 767, DateTimeKind.Local).AddTicks(2927),
                            CreatedBy = "system",
                            Name = "Infraestrutura",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("14c10f5a-3116-4ac3-b361-eaf5d41e416d"),
                            CreatedAt = new DateTime(2024, 11, 14, 18, 17, 10, 767, DateTimeKind.Local).AddTicks(2931),
                            CreatedBy = "system",
                            Name = "Asset",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("TransferoHR.Domain.Entities.JobLevel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("JobLevel");

                    b.HasData(
                        new
                        {
                            Id = new Guid("72185742-ab7c-4de8-821e-ef33539314dd"),
                            CreatedAt = new DateTime(2024, 11, 14, 18, 17, 10, 767, DateTimeKind.Local).AddTicks(2685),
                            CreatedBy = "system",
                            Name = "Junior",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("1a667dbc-a336-48d4-a3a8-b99a4a10cf4c"),
                            CreatedAt = new DateTime(2024, 11, 14, 18, 17, 10, 767, DateTimeKind.Local).AddTicks(2700),
                            CreatedBy = "system",
                            Name = "Senior",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("90600262-4527-40fe-b0f5-bcbcee2f1e94"),
                            CreatedAt = new DateTime(2024, 11, 14, 18, 17, 10, 767, DateTimeKind.Local).AddTicks(2701),
                            CreatedBy = "system",
                            Name = "Pleno",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("cbe2725d-29b4-4902-822a-7e10565ac501"),
                            CreatedAt = new DateTime(2024, 11, 14, 18, 17, 10, 767, DateTimeKind.Local).AddTicks(2703),
                            CreatedBy = "system",
                            Name = "Gerente",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("TransferoHR.Domain.Entities.JobTitle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("JobTitle");

                    b.HasData(
                        new
                        {
                            Id = new Guid("42dbf04a-fca1-4d40-ba23-9cf3ee215e07"),
                            CreatedAt = new DateTime(2024, 11, 14, 18, 17, 10, 767, DateTimeKind.Local).AddTicks(2864),
                            CreatedBy = "system",
                            Name = "DBA",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("35cc223b-bd6b-48f2-88cd-94847ce9b6cd"),
                            CreatedAt = new DateTime(2024, 11, 14, 18, 17, 10, 767, DateTimeKind.Local).AddTicks(2877),
                            CreatedBy = "system",
                            Name = "Analista de suporte",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("f3c9ff5e-11f5-49fe-9023-ec870e20cded"),
                            CreatedAt = new DateTime(2024, 11, 14, 18, 17, 10, 767, DateTimeKind.Local).AddTicks(2879),
                            CreatedBy = "system",
                            Name = "Desenvolvedor",
                            Status = (byte)1
                        },
                        new
                        {
                            Id = new Guid("5c276000-6235-4573-8c6b-b733552565e6"),
                            CreatedAt = new DateTime(2024, 11, 14, 18, 17, 10, 767, DateTimeKind.Local).AddTicks(2881),
                            CreatedBy = "system",
                            Name = "Analista de Asset",
                            Status = (byte)1
                        });
                });

            modelBuilder.Entity("TransferoHR.Domain.Entities.WorkExperience", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("CollaboratorId")
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<Guid>("JobLevelId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("JobTitleId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("LeaderId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("UpdatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CollaboratorId");

                    b.HasIndex("JobLevelId");

                    b.HasIndex("JobTitleId");

                    b.HasIndex("LeaderId");

                    b.ToTable("WorkExperience");
                });

            modelBuilder.Entity("TransferoHR.Domain.Entities.WorkExperience", b =>
                {
                    b.HasOne("TransferoHR.Domain.Entities.Collaborator", "Collaborator")
                        .WithMany()
                        .HasForeignKey("CollaboratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransferoHR.Domain.Entities.JobLevel", "JobLevel")
                        .WithMany()
                        .HasForeignKey("JobLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransferoHR.Domain.Entities.JobTitle", "JobTitle")
                        .WithMany()
                        .HasForeignKey("JobTitleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TransferoHR.Domain.Entities.Collaborator", "Leader")
                        .WithMany()
                        .HasForeignKey("LeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collaborator");

                    b.Navigation("JobLevel");

                    b.Navigation("JobTitle");

                    b.Navigation("Leader");
                });
#pragma warning restore 612, 618
        }
    }
}
